<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Connor Montgomery]]></title>
  <link href="http://cnnr.me//atom.xml" rel="self"/>
  <link href="http://cnnr.me//"/>
  <updated>2012-01-09T14:07:09-06:00</updated>
  <id>http://cnnr.me//</id>
  <author>
    <name><![CDATA[Connor Montgomery]]></name>
    <email><![CDATA[c@cnnr.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to link to other posts in octopress]]></title>
    <link href="http://cnnr.me//b/2012/01/how-to-link-to-other-posts-in-octopress/"/>
    <updated>2012-01-09T13:49:00-06:00</updated>
    <id>http://cnnr.me//b/2012/01/how-to-link-to-other-posts-in-octopress</id>
    <content type="html"><![CDATA[<p>Earlier this week, <a href="http://www.candlerblog.com/" target="_blank">Jonathan Protsky</a> tweeted at me, <a href="https://twitter.com/#!/poritsky/status/156436178650931200" target="_blank">asking how I link to external posts</a> in my custom Octopress theme. I figured Jonathan isn&#8217;t the only one wondering how to do this, and since it isn&#8217;t exactly obvious, I&#8217;m here to share how I went about implementing that functionality.</p>

<h3>It&#8217;s all in the YAML</h3>

<p>As you can see <a href="https://github.com/imathis/octopress/issues/119#issuecomment-1922504" target="_blank">here</a>, Octopress allows any variable(s) to be added to the YAML of your post. The way I went about doing it was by adding an <code>external-url</code> attribute.</p>

<h4>For example, see the post below</h4>

<script src="https://gist.github.com/1584630.js"> </script>


<p>Now, you may have noticed that I also gave the post some content. That&#8217;s
becuase with my custom theme, I have links to the previous/next posts
after the current post. If one of those links happens to be a post that
uses an <code>external-url</code>, I&#8217;d like to give them some context on my own
site before sending them off to another one.</p>

<p>As you can see, I&#8217;m simply adding an <code>external-url</code> attribute, and if I
want to link to a post that is at a different URL, I just put the URL in
there.</p>

<h3>Okay, it&#8217;s not all in the YAML</h3>

<p>Now, we just need to adjust the index page that loops through and lists
all of your posts (most likely <code>source/index.html</code>).</p>

<p>All you need to do is check to see if <code>post.external-url</code> exists. See
the example below (that&#8217;s actually the <code>index.html</code> file I use):</p>

<script src="https://gist.github.com/1584645.js"> </script>


<p>And, as you can see, I&#8217;m prefixing all of my posts that link to an
external URL with <code>[link]</code>, so the user knows what to expect. I&#8217;d
recommend giving some kind of visual cue to the user.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play all rdio songs on mobile... kind of.]]></title>
    <link href="http://cnnr.me//b/2012/01/play-all-rdio-songs-on-mobile-dot-dot-dot-kind-of/"/>
    <updated>2012-01-03T12:24:00-06:00</updated>
    <id>http://cnnr.me//b/2012/01/play-all-rdio-songs-on-mobile-dot-dot-dot-kind-of</id>
    <content type="html"><![CDATA[<p>I&#8217;ve always wanted to just be able to shuffle through my entire
collection on Rdio&#8217;s mobile app. While it&#8217;s on their <a href="http://help.rdio.com/customer/portal/questions/50582-when-will-i-be-able-to-play-my-collection-" target="_blank">timeline</a>, it&#8217;s not
currently implemented.</p>

<p>This is a (super) hacky way to accomplish what I wanted. Essentially, it
creates two playlists:</p>

<ol>
<li>All songs in your collection</li>
<li>All songs sync&#8217;d to mobile</li>
</ol>


<p>From there, you can shuffle through them, just like you&#8217;ve always wanted
to.</p>

<p>Check it out here: <a href="https://github.com/connormontgomery/sync-all-rdio-songs">https://github.com/connormontgomery/sync-all-rdio-songs</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sync all Rdio songs to mobile]]></title>
    <link href="http://cnnr.me//b/2012/01/want-to-sync-all-of-your-rdio-songs-to-mobile-now-you-can/"/>
    <updated>2012-01-02T14:01:00-06:00</updated>
    <id>http://cnnr.me//b/2012/01/want-to-sync-all-of-your-rdio-songs-to-mobile-now-you-can</id>
    <content type="html"><![CDATA[<p>Want a simple way to automatically sync all of the Rdio songs in your
collection to mobile?</p>

<p><a href="https://github.com/connormontgomery/sync-all-rdio-songs">Here you go</a> :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keyboard shortcuts on Rdio]]></title>
    <link href="http://cnnr.me//b/2012/01/keyboard-shortcuts-on-rdios-web-app/"/>
    <updated>2012-01-01T14:16:00-06:00</updated>
    <id>http://cnnr.me//b/2012/01/keyboard-shortcuts-on-rdios-web-app</id>
    <content type="html"><![CDATA[<p>Call me crazy, but most of the time when I can use a web app over a
native app, I prefer the web app. Maybe some of you do, too.</p>

<p>Anyways, one of my favorite web apps is <a href="http://rdio.com">Rdio</a>. I
recently found myself wishing I could control the web app with my <a href="http://www.apple.com/keyboard/">Apple
Wireless Keyboard&#8217;s</a> media controls.
Well, with a little hacking on a great
<a href="https://github.com/borismus/keysocket/">project</a> put together by <a href="http://smus.com/">Boris
Smus</a>, it&#8217;s now possible (Mac Only for now).</p>

<h3>How to add keyboard shortcuts to Rdio&#8217;s web app</h3>

<h4>Pre-requisites</h4>

<ol>
<li><p>First, you&#8217;ll want to clone <a href="https://github.com/borismus/keysocket/">his repo</a>.
To do so, simply run the following command from the terminal:</p>

<p>  <code>
  git clone https://github.com/borismus/keysocket.git
 </code></p></li>
<li><p>Once you&#8217;ve cloned it, download and install the <a href="https://github.com/downloads/borismus/keysocket/KeySocket.zip">Key Socket.app</a>.
This app will be installed on your Mac, and essentially messages the
extension that a button has been pressed (I will explain this more later
in the post).</p></li>
<li><p>If you haven&#8217;t already, make sure you start the Key Socket.app. I
would also recommend adjusting your system to start it up when the
system boots.</p></li>
</ol>


<h4>Alright, let&#8217;s get started</h4>

<ol>
<li><p>Now it&#8217;s time to hack. Open up a terminal and <code>cd</code> into <code>/extension</code>
within the project directory.</p></li>
<li><p>Next, create a file for the rdio adapter. To do so, run:</p>

<p> <code>
 touch keysocket-rdio.js
</code></p></li>
<li><p>Now, open up the <code>keysocket-rdio.js</code> file you just created, and put the following code
in there (I will explain it later on in the post):</p></li>
</ol>


<script src="https://gist.github.com/1548707.js"> </script>


<p>Finally, open up the <code>manifest.json</code> file, and adjust it to be like
so (I will also explain this later on in the post):</p>

<script src="https://gist.github.com/1548717.js"> </script>


<h4>Adding the extension to Chrome</h4>

<p>Believe it or not, the extension is done! Now, we&#8217;ve just got to add it
to Chrome. To do so, follow these steps:</p>

<ol>
<li><p>Navigate your browser to: <code>chrome://extensions</code>.</p></li>
<li><p>Click the button that says <strong>&#8220;Load unpacked extension&#8230;&#8221;</strong>.</p></li>
<li><p>Navigate to the <code>/extension</code> directory, and click <strong>&#8220;Select&#8221;</strong>.</p></li>
<li><p>If you have Rdio&#8217;s web app open, give it a refresh, and your media keys should
now be controlling the application! Make sure you don&#8217;t have iTunes
and Rdio open (or the <a href="http://www.rdio.com/#/apps/mac/">Rdio Mac App</a> and the web app open), as it will affect both applications.</p></li>
</ol>


<h3>Further explanation</h3>

<p>Awesome - you should now be able to control Rdio&#8217;s web app from your keyboard!
I mentioned above that I&#8217;ll be explaining a few things later on in the
post, so if you&#8217;d like to know more about how those things work, just
keep on reading.</p>

<h4>How the heck does this work?</h4>

<p>It&#8217;s actually not that complicated at all. Boris does a great job of
explaining it on his <a href="http://smus.com/chrome-media-keys-revisited">blog post</a> about creating the keysocket app and
extension. I&#8217;d recommend checking that out (and following him on <a href="https://twitter.com/#!/borismus">Twitter</a>
- he&#8217;s extremely bright and has lots of great stuff).</p>

<p>Essentially, the keysocket app installed locally messages the extension
when you press a button down. If that button&#8217;s character code matches
what we define in our <code>keysocket-rdio.js</code> file (in this case, 20 for the
previous button, 16 for play/pause, and 19 for the next button), then it
executes the <code>simulateClick</code> function, passing in the element ID that we
defined.</p>

<p>It then, well, simulates a click on that element.</p>

<h4>Explaning keysocket-rdio.js</h4>

<p>If you look at this file and compare it to the other
<code>keysocket-x.js</code> files, you&#8217;ll see that it&#8217;s very similar. To be frank, I
just copied &amp; pasted what Boris had done with other services, and modified it to work with
Rdio. However - it&#8217;s good to know how I ended up changing it.</p>

<p>It was extremely simple - the block of code from <code>line 34 - line 42</code> is
all that needed modification. I just changed the ID&#8217;s of Rdio&#8217;s elements
in the DOM to match what action was supposed to happen.</p>

<figure>
  <a href="http://f.cl.ly/items/3Q1k440z0I403M2Y1B1k/Screen%20Shot%202012-01-01%20at%206.21.14%20PM.png" target="_blank"><img src="http://f.cl.ly/items/3P0m350A2n1A213n0q08/rdio-small.png"></a>
  <figcaption><strong>Above:</strong> The DOM tree that makes up Rdio&#8217;s player</figcaption>
</figure>


<p>For example, on line 34. If the key pressed&#8217;s keyCode is equal to the
<code>PREV</code>&#8217;s value (which happens if you press F7 on the Apple keyboard), it
runs the <code>simulateClick</code> function and passes in the <code>previousButton</code> ID.</p>

<p>That&#8217;s really it, just copied 3 times. If you have any questions about
it, feel free to let me know on twitter.</p>

<h4>Explaning manifest.json</h4>

<p>Every chrome extension <strong>requires</strong> a <code>manifest.json</code> file. (<strong>note:</strong>
if you&#8217;d like to learn more about Chrome Extension development, check
out my <a href="http://net.tutsplus.com/tutorials/javascript-ajax/how-i-made-the-domai-nr-chrome-extension/">article on nettuts</a>.)</p>

<p>All we are doing here is saying if the current URL <em>matches</em>
<code>http://www.rdio.com/*</code>, load the <code>keysocket-rdio.js</code> file. That ending
<code>*</code> is required, becuase it&#8217;s a wildcard character. Basically, that
means the <code>keysocket-rdio.js</code> file will load at any path within
<code>http://rdio.com</code>, not just the root path.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test Blog Post]]></title>
    <link href="http://cnnr.me//b/2011/12/test-blog-post/"/>
    <updated>2011-12-28T23:47:00-06:00</updated>
    <id>http://cnnr.me//b/2011/12/test-blog-post</id>
    <content type="html"><![CDATA[<p>Maecenas sed diam eget risus varius blandit sit amet non magna. Cum sociis natoque penatibus et magnis dis parturient montes, <a href="http://cnnr.me">nascetur ridiculus</a> mus. Curabitur blandit tempus porttitor. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>

<h3>Breaking up some of my thoughts with a subhead</h3>

<p>Maecenas sed diam eget risus varius blandit sit amet non magna. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>

<blockquote><p>Nullam id dolor id nibh ultricies vehicula ut id elit.</p></blockquote>

<p>Maecenas sed diam eget risus varius blandit sit amet non magna. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>

<figure>
  <img src="../images/img.png">
  <figcaption><strong>Above:</strong> This is an image of a bicicle.</figcaption>
</figure>


<p>Maecenas sed diam eget risus varius blandit sit amet non magna. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>

<script src="https://gist.github.com/1218637.js?file=newSite.sh"></script>


<p>Maecenas sed diam eget risus varius blandit sit amet non magna. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Move the Web Forward]]></title>
    <link href="http://cnnr.me//b/2011/11/move-the-web-forward/"/>
    <updated>2011-11-30T10:46:00-06:00</updated>
    <id>http://cnnr.me//b/2011/11/move-the-web-forward</id>
    <content type="html"><![CDATA[<p>Some <a href="https://github.com/h5bp/movethewebforward/contributors">really awesome people</a> and I put together this awesome resource
to help promote doing more for the web. It was an awesome experience,
and would love it if you took a look.</p>

<p><a href="http://movethewebforward.org">http://movethewebforward.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Published on nettuts!]]></title>
    <link href="http://cnnr.me//b/2011/08/published-on-nettuts/"/>
    <updated>2011-08-09T10:31:00-05:00</updated>
    <id>http://cnnr.me//b/2011/08/published-on-nettuts</id>
    <content type="html"><![CDATA[<p>Well this is exciting! I was just published in my first big blog! Check
out my article on <a href="http://net.tutsplus.com/tutorials/javascript-ajax/how-i-made-the-domai-nr-chrome-extension/">how I made the Domai.nr Chrome Extension</a>
on <a href="http://net.tutsplus.com">nettuts</a>!</p>

<p>The extension can be found <a href="https://chrome.google.com/webstore/detail/ckimnhkhhfcedianojdljjgpgachccpf">here</a>. Go ahead and check it out!</p>
]]></content>
  </entry>
  
</feed>
